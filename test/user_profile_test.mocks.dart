// Mocks generated by Mockito 5.4.5 from annotations
// in bloquinho/test/user_profile_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;

import 'package:bloquinho/core/models/user_profile.dart' as _i2;
import 'package:bloquinho/core/services/user_profile_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProfileService extends _i1.Mock
    implements _i3.UserProfileService {
  MockUserProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserProfile?> getCurrentProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile?>.value(),
      ) as _i4.Future<_i2.UserProfile?>);

  @override
  _i4.Future<_i2.UserProfile> saveProfile(_i2.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #saveProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> createProfile({
    required String? name,
    required String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProfile,
          [],
          {
            #name: name,
            #email: email,
          },
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #createProfile,
            [],
            {
              #name: name,
              #email: email,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> updateProfile({
    String? name,
    String? email,
    String? bio,
    String? phone,
    String? location,
    DateTime? birthDate,
    String? website,
    String? profession,
    List<String>? interests,
    bool? isPublic,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #name: name,
            #email: email,
            #bio: bio,
            #phone: phone,
            #location: location,
            #birthDate: birthDate,
            #website: website,
            #profession: profession,
            #interests: interests,
            #isPublic: isPublic,
          },
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {
              #name: name,
              #email: email,
              #bio: bio,
              #phone: phone,
              #location: location,
              #birthDate: birthDate,
              #website: website,
              #profession: profession,
              #interests: interests,
              #isPublic: isPublic,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> uploadAvatarFromGallery() => (super.noSuchMethod(
        Invocation.method(
          #uploadAvatarFromGallery,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #uploadAvatarFromGallery,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> uploadAvatarFromCamera() => (super.noSuchMethod(
        Invocation.method(
          #uploadAvatarFromCamera,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #uploadAvatarFromCamera,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> removeAvatar() => (super.noSuchMethod(
        Invocation.method(
          #removeAvatar,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #removeAvatar,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i5.File?> getAvatarFile() => (super.noSuchMethod(
        Invocation.method(
          #getAvatarFile,
          [],
        ),
        returnValue: _i4.Future<_i5.File?>.value(),
      ) as _i4.Future<_i5.File?>);

  @override
  _i4.Future<void> deleteProfile() => (super.noSuchMethod(
        Invocation.method(
          #deleteProfile,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> hasProfile() => (super.noSuchMethod(
        Invocation.method(
          #hasProfile,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> getProfileStats() => (super.noSuchMethod(
        Invocation.method(
          #getProfileStats,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> exportProfile() => (super.noSuchMethod(
        Invocation.method(
          #exportProfile,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
